{"version":3,"sources":["neko-1-main/m-1-ui/u1-common/components/c2-SuperButton/SuperButton.module.css","neko-1-main/m-1-ui/u1-common/components/c1-SuperInputText/SuperInputText.module.css","neko-1-main/m-1-ui/u1-common/components/c3-SuperCheckbox/SuperCheckbox.module.css","neko-1-main/m-1-ui/u1-common/components/c5-SuperSelect/SuperSelect.module.css","neko-1-main/m-1-ui/u1-common/components/c6-SuperRadio/SuperRadio.module.css","neko-1-main/m-1-ui/u1-common/components/c4-SuperEditableSpan/SuperEditableSpan.module.css","neko-1-main/m-1-ui/u1-common/demoSuperComponentsStand/demoSuperComponentsStand.module.css","neko-2-features/f-1-authorization/a-2-register/r-1-ui/Register.module.css","neko-2-features/f-1-authorization/a-1-sign-in/s-2-bll/b-2-redux/signInInitialState.ts","neko-2-features/f-1-authorization/a-1-sign-in/s-2-bll/b-2-redux/signInActions.ts","neko-2-features/f-1-authorization/a-2-register/r-2-bll/b-2-redux/registerInitialState.ts","neko-2-features/f-1-authorization/a-2-register/r-2-bll/b-2-redux/registerActions.ts","neko-2-features/f-1-authorization/a-3-forgot/f-2-bll/b-2-redux/forgotInitialState.ts","neko-2-features/f-1-authorization/a-3-forgot/f-2-bll/b-2-redux/forgotActions.ts","neko-2-features/f-4-social/s-1-neko/n-2-bll/b-2-redux/nekoInitialState.ts","neko-2-features/f-1-authorization/a-4-set-password/s-2-bll/b-2-redux/setPassInitialState.ts","neko-2-features/f-1-authorization/a-4-set-password/s-2-bll/b-2-redux/setPassActions.ts","neko-1-main/m-2-bll/store.ts","neko-2-features/f-1-authorization/a-1-sign-in/s-2-bll/b-2-redux/signInReducer.ts","neko-2-features/f-1-authorization/a-2-register/r-2-bll/b-2-redux/registerReducer.ts","neko-2-features/f-1-authorization/a-3-forgot/f-2-bll/b-2-redux/forgotReducer.ts","neko-2-features/f-1-authorization/a-4-set-password/s-2-bll/b-2-redux/setPassReducer.ts","neko-2-features/f-4-social/s-1-neko/n-2-bll/b-2-redux/nekoReducer.ts","neko-1-main/m-1-ui/u1-common/components/c1-SuperInputText/SuperInputText.tsx","neko-1-main/m-1-ui/u1-common/components/c2-SuperButton/SuperButton.tsx","neko-1-main/m-1-ui/u1-common/components/c3-SuperCheckbox/SuperCheckbox.tsx","base-url.ts","neko-2-features/f-1-authorization/a-1-sign-in/s-3-dal/SignInAPI.ts","neko-2-features/f-1-authorization/a-1-sign-in/s-1-ui/SignIn.tsx","neko-2-features/f-1-authorization/a-1-sign-in/s-2-bll/signInThunk.ts","neko-2-features/f-1-authorization/a-1-sign-in/s-1-ui/SignInContainer.tsx","neko-2-features/f-1-authorization/a-1-sign-in/s-1-ui/SignInPage.tsx","neko-2-features/f-1-authorization/a-2-register/r-3-dal/RegisterAPI.ts","neko-2-features/f-1-authorization/a-2-register/r-1-ui/Register.tsx","neko-2-features/f-1-authorization/a-2-register/r-2-bll/registerThunk.ts","neko-2-features/f-1-authorization/a-2-register/r-1-ui/RegisterContainer.tsx","neko-2-features/f-1-authorization/a-2-register/r-1-ui/RegisterPage.tsx","neko-2-features/f-1-authorization/a-3-forgot/f-3-dal/ForgotAPI.ts","neko-2-features/f-1-authorization/a-3-forgot/f-1-ui/Forgot.tsx","neko-2-features/f-1-authorization/a-3-forgot/f-2-bll/forgotThunk.ts","neko-2-features/f-1-authorization/a-3-forgot/f-1-ui/ForgotContainer.tsx","neko-2-features/f-1-authorization/a-3-forgot/f-1-ui/ForgotPage.tsx","neko-2-features/f-4-social/s-1-neko/n-1-ui/Neko.tsx","neko-2-features/f-4-social/s-1-neko/n-1-ui/NekoContainer.tsx","neko-2-features/f-4-social/s-1-neko/n-1-ui/NekoPage.tsx","neko-1-main/m-1-ui/u1-common/components/c5-SuperSelect/SuperSelect.tsx","neko-1-main/m-1-ui/u1-common/components/c6-SuperRadio/SuperRadio.tsx","neko-1-main/m-1-ui/u1-common/components/c4-SuperEditableSpan/SuperEditableSpan.tsx","neko-1-main/m-1-ui/u1-common/demoSuperComponentsStand/demoSuperComponentsStand.tsx","neko-2-features/f-1-authorization/a-4-set-password/s-3-dal/SetPassAPI.ts","neko-2-features/f-1-authorization/a-4-set-password/s-1-ui/SetPass.tsx","neko-2-features/f-1-authorization/a-4-set-password/s-2-bll/setPassThunk.ts","neko-2-features/f-1-authorization/a-4-set-password/s-1-ui/SetPassContainer.tsx","neko-2-features/f-1-authorization/a-4-set-password/s-1-ui/SetPassPage.tsx","neko-1-main/m-1-ui/Routes.tsx","neko-1-main/m-1-ui/Header.tsx","neko-1-main/m-1-ui/Main.tsx","App.tsx","serviceWorker.ts","index.tsx","neko-2-features/f-1-authorization/a-3-forgot/f-1-ui/Forgot.module.css"],"names":["module","exports","signInInitialState","isAuth","error","isLoading","profileData","SIGN_IN_LOADING","SIGN_IN_ERROR","SET_PROFILE_DATA","SET_IS_AUTH","setSignInError","type","payload","setSignInLoading","registerInitialState","isSuccess","REGISTER_LOADING","REGISTER_ERROR","REGISTER_SUCCESS","setRegisterSuccess","setRegisterError","setRegisterLoading","forgotInitialState","FORGOT_LOADING","FORGOT_ERROR","FORGOT_SUCCESS","seForgotSuccess","setForgotError","setForgotLoading","nekoInitialState","setPassInitialState","SET_PASS_LOADING","SET_PASS_ERROR","SET_PASS_SUCCESS","setNewPasswordError","setNewPasswordLoading","reducers","combineReducers","signIn","state","action","register","forgot","setPass","neko","store","createStore","applyMiddleware","thunkMiddleware","window","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","dimention","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperButton","variant","size","red","useState","isMouseDown","setIsMouseDown","finalClassName","button","mouseDown","onMouseDown","onMouseUp","SuperCheckbox","onChangeChecked","children","checkbox","checked","instance","axios","create","baseURL","SignInAPI","email","password","rememberMe","post","then","response","data","SignIn","console","log","dispatch","useDispatch","setEmail","setPassword","setRememberMe","useSelector","to","PROFILE_PATH","classes","container","preloader","formControl","name","forgotInput","placeholder","onClick","getStore","a","message","SignInContainer","SignInPage","RegisterAPI","Register","firstPassword","setFirstPassword","secondPassword","setSecondPassword","useEffect","SIGN_IN_PATH","link","RegisterContainer","RegisterPage","ForgotAPI","from","Forgot","success","forgotPassword","ForgotContainer","ForgotPage","Neko","NekoContainer","NekoPage","SuperSelect","options","onChangeOption","mappedOptions","map","o","index","option","select","SuperRadio","onChangeCallback","i","radioItem","radioGroup","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","span","input","DemoSuperComponentsStand","text","setText","editableSpanValue","setEditableSpanValue","setChecked","arr","demo","style","margin","undefined","SetPassAPI","token","SetPass","useParams","setNewPassword","SetPassContainer","SetPassPage","REGISTER_PATH","FORGOT_PATH","SET_NEW_PASSWORD_PATH","STAND_PATH","Routes","exact","path","render","Header","display","alignItems","justifyContent","flexWrap","Main","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e1010b01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__2E8PG\",\"mouseDown\":\"SuperButton_mouseDown__rxcNk\",\"primary\":\"SuperButton_primary__10al_\",\"secondary\":\"SuperButton_secondary__iJGn8\",\"success\":\"SuperButton_success__1B4UJ\",\"warning\":\"SuperButton_warning__1_WXG\",\"danger\":\"SuperButton_danger__3xdEI\",\"small\":\"SuperButton_small__2S9OJ\",\"medium\":\"SuperButton_medium__3zymP\",\"large\":\"SuperButton_large__NmJBq\",\"red\":\"SuperButton_red__b2j5_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1IMqn\",\"small\":\"SuperInputText_small__yR8nq\",\"medium\":\"SuperInputText_medium__16RfX\",\"large\":\"SuperInputText_large__3bd_j\",\"errorInput\":\"SuperInputText_errorInput__2i_g3\",\"error\":\"SuperInputText_error__Yh8hL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Wmxrc\",\"spanClassName\":\"SuperCheckbox_spanClassName__2Iv8e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__iu0EE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioGroup\":\"SuperRadio_radioGroup__3s6Zc\",\"radioItem\":\"SuperRadio_radioItem__1DUgC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"SuperEditableSpan_span__1A9Bc\",\"input\":\"SuperEditableSpan_input__2gMbq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"demo\":\"demoSuperComponentsStand_demo__ec1nv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Register_container__3TkuH\",\"formControl\":\"Register_formControl__1OCLi\",\"link\":\"Register_link__2bg52\",\"success\":\"Register_success__soHnn\",\"error\":\"Register_error__2EkO6\",\"preloader\":\"Register_preloader__is9Rw\"};","import {ResponseLoginType} from '../../s-3-dal/SignInAPI';\r\n\r\nexport interface ProfileDataType extends ResponseLoginType {}\r\n\r\nexport interface ISignInState {\r\n   isAuth: boolean,\r\n   error: null | string,\r\n   isLoading: boolean,\r\n   profileData: null | ProfileDataType\r\n}\r\n\r\nexport const signInInitialState: ISignInState = {\r\n   isAuth: false,\r\n   error: null,\r\n   isLoading: false,\r\n   profileData: null\r\n};\r\n","import {ProfileDataType} from './signInInitialState';\r\n\r\nexport const SIGN_IN_LOADING = 'SIGN_IN/LOADING';\r\nexport const SIGN_IN_ERROR = 'SIGN_IN/ERROR';\r\nexport const SET_PROFILE_DATA = 'SIGN_IN/SET_PROFILE_DATA';\r\nexport const SET_IS_AUTH = 'SIGN_IN/SET_IS_AUTH';\r\n\r\nexport type SignInActions =\r\n   | ReturnType<typeof setIsAuth>\r\n   | ReturnType<typeof setSignInError>\r\n   | ReturnType<typeof setSignInLoading>\r\n   | ReturnType<typeof setProfileData>\r\n\r\n\r\nexport const setSignInError = (error: string | null) => ({\r\n   type: SIGN_IN_ERROR,\r\n   payload: {error}\r\n} as const);\r\n\r\nexport const setSignInLoading = (isLoading: boolean) => ({\r\n   type: SIGN_IN_LOADING,\r\n   payload: {isLoading}\r\n} as const);\r\n\r\nexport const setProfileData = (profileData: ProfileDataType) => ({\r\n   type: SET_PROFILE_DATA,\r\n   payload: {profileData}\r\n} as const);\r\n\r\nexport const setIsAuth = (isAuth: boolean) => ({\r\n   type: SET_IS_AUTH,\r\n   payload: {isAuth}\r\n} as const);\r\n\r\n","export interface IRegisterState {\r\n   isSuccess: boolean,\r\n   error: null | string,\r\n   isLoading: boolean\r\n}\r\n\r\nexport const registerInitialState: IRegisterState = {\r\n   isSuccess: false,\r\n   error: null,\r\n   isLoading: false\r\n};\r\n","export const REGISTER_LOADING = 'REGISTER/LOADING';\r\nexport const REGISTER_ERROR = 'REGISTER/ERROR';\r\nexport const REGISTER_SUCCESS = 'REGISTER/SUCCESS';\r\n\r\nexport const REGISTER = 'REGISTER/SOME';\r\n\r\nexport type RegisterActions =\r\n   | ReturnType<typeof setRegisterSuccess>\r\n   | ReturnType<typeof setRegisterError>\r\n   | ReturnType<typeof setRegisterLoading>;\r\n\r\n\r\nexport const setRegisterSuccess = (isSuccess: boolean) => ({\r\n   type: REGISTER_SUCCESS,\r\n   payload: {isSuccess}\r\n} as const);\r\n\r\nexport const setRegisterError = (error: string | null) => ({\r\n   type: REGISTER_ERROR,\r\n   payload: {error}\r\n} as const);\r\n\r\nexport const setRegisterLoading = (isLoading: boolean) => ({\r\n   type: REGISTER_LOADING,\r\n   payload: {isLoading}\r\n} as const);\r\n","export interface IForgotState {\n   isSuccess: boolean\n   error: string | null\n   isLoading: boolean\n}\n\nexport const forgotInitialState: IForgotState = {\n   isSuccess: false,\n   error: null,\n   isLoading: false\n};\n","export const FORGOT_LOADING = 'FORGOT/LOADING';\nexport const FORGOT_ERROR = 'FORGOT/ERROR';\nexport const FORGOT_SUCCESS = 'FORGOT/SUCCESS';\n\nexport type IForgotActions =\n   | ReturnType<typeof seForgotSuccess>\n   | ReturnType<typeof setForgotError>\n   | ReturnType<typeof setForgotLoading>;\n\n\nexport const seForgotSuccess = (isSuccess: boolean) => ({\n   type: FORGOT_SUCCESS,\n   payload: {isSuccess}\n} as const);\n\nexport const setForgotError = (error: string | null) => ({\n   type: FORGOT_ERROR,\n   payload: {error}\n} as const);\n\nexport const setForgotLoading = (isLoading: boolean) => ({\n   type: FORGOT_LOADING,\n   payload: {isLoading}\n} as const);\n\n","export interface INekoState {\r\n\r\n}\r\n\r\nexport const nekoInitialState: INekoState = {\r\n\r\n};\r\n","export interface ISetPassState {\n   isSuccess: boolean\n   error: string | null\n   isLoading: boolean\n}\n\nexport const setPassInitialState: ISetPassState = {\n   isSuccess: false,\n   error: null,\n   isLoading: false\n};\n","export const SET_PASS_LOADING = 'SET_PASS/LOADING';\nexport const SET_PASS_ERROR = 'SET_PASS/ERROR';\nexport const SET_PASS_SUCCESS = 'SET_PASS/SUCCESS';\n\n\nexport type ISetPassActions =\n   | ReturnType<typeof setNewPasswordSuccess>\n   | ReturnType<typeof setNewPasswordError>\n   | ReturnType<typeof setNewPasswordLoading>\n\n\nexport const setNewPasswordSuccess = (isSuccess: boolean) => ({\n   type: SET_PASS_SUCCESS,\n   payload: {isSuccess}\n} as const);\n\nexport const setNewPasswordError = (error: string | null) => ({\n   type: SET_PASS_ERROR,\n   payload: {error}\n} as const);\n\nexport const setNewPasswordLoading = (isLoading: boolean) => ({\n   type: SET_PASS_LOADING,\n   payload: {isLoading}\n} as const);\n\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport  thunkMiddleware from \"redux-thunk\"\r\nimport {signInReducer} from \"../../neko-2-features/f-1-authorization/a-1-sign-in/s-2-bll/b-2-redux/signInReducer\";\r\nimport {registerReducer} from \"../../neko-2-features/f-1-authorization/a-2-register/r-2-bll/b-2-redux/registerReducer\";\r\nimport {forgotReducer} from \"../../neko-2-features/f-1-authorization/a-3-forgot/f-2-bll/b-2-redux/forgotReducer\";\r\nimport {nekoReducer} from \"../../neko-2-features/f-4-social/s-1-neko/n-2-bll/b-2-redux/nekoReducer\";\r\nimport {setPassReducer} from '../../neko-2-features/f-1-authorization/a-4-set-password/s-2-bll/b-2-redux/setPassReducer';\r\n\r\nconst reducers = combineReducers({\r\n    signIn: signInReducer,\r\n    register: registerReducer,\r\n    forgot: forgotReducer,\r\n    setPass: setPassReducer,\r\n\r\n    neko: nekoReducer,\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store\r\n\r\nexport type IAppStore = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev\r\n","import {signInInitialState} from './signInInitialState';\r\nimport {SET_IS_AUTH, SET_PROFILE_DATA, SIGN_IN_ERROR, SIGN_IN_LOADING, SignInActions} from './signInActions';\r\n\r\n\r\nexport const signInReducer = (state = signInInitialState, action: SignInActions) => {\r\n   switch (action.type) {\r\n      case SIGN_IN_LOADING:\r\n      case SIGN_IN_ERROR:\r\n      case SET_IS_AUTH:\r\n      case SET_PROFILE_DATA: {\r\n         return {...state, ...action.payload}\r\n      }\r\n\r\n      default: {\r\n         return state;\r\n      }\r\n   }\r\n};\r\n","import {registerInitialState} from './registerInitialState';\r\nimport {REGISTER_ERROR, REGISTER_LOADING, REGISTER_SUCCESS, RegisterActions} from './registerActions';\r\n\r\n\r\nexport const registerReducer = (state = registerInitialState, action: RegisterActions) => {\r\n   switch (action.type) {\r\n      case REGISTER_SUCCESS:\r\n      case REGISTER_ERROR:\r\n      case REGISTER_LOADING: {\r\n         return {...state, ...action.payload}\r\n      }\r\n\r\n      default: {\r\n         return state;\r\n      }\r\n   }\r\n};\r\n","import {forgotInitialState} from './forgotInitialState';\nimport {FORGOT_ERROR, FORGOT_LOADING, FORGOT_SUCCESS, IForgotActions} from './forgotActions';\n\nexport const forgotReducer = (state = forgotInitialState, action: IForgotActions) => {\n    switch (action.type) {\n        case FORGOT_SUCCESS: {\n            return { ...state, ...action.payload}\n        }\n\n       case FORGOT_ERROR: {\n          return {...state, ...action.payload}\n       }\n\n       case FORGOT_LOADING: {\n          return {...state, ...action.payload}\n       }\n\n        default: {\n            return state;\n        }\n    }\n};\n","import {setPassInitialState} from './setPassInitialState';\nimport {ISetPassActions, SET_PASS_ERROR, SET_PASS_LOADING, SET_PASS_SUCCESS} from './setPassActions';\nimport {FORGOT_ERROR, FORGOT_LOADING, FORGOT_SUCCESS} from '../../../a-3-forgot/f-2-bll/b-2-redux/forgotActions';\n\nexport const setPassReducer = (state = setPassInitialState, action: ISetPassActions) => {\n   switch (action.type) {\n      case SET_PASS_SUCCESS: {\n         return { ...state, ...action.payload}\n      }\n\n      case SET_PASS_ERROR: {\n         return {...state, ...action.payload}\n      }\n\n      case SET_PASS_LOADING: {\n         return {...state, ...action.payload}\n      }\n\n      default: {\n         return state;\n      }\n   }\n};\n","import {nekoInitialState} from \"./nekoInitialState\";\r\nimport {INekoActions, NEKO_SET_NAME} from \"./nekoActions\";\r\n\r\nexport const nekoReducer = (state = nekoInitialState, action: INekoActions) => {\r\n    switch (action.type) {\r\n\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react';\nimport s from './SuperInputText.module.css';\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype DimentionType = 'small' | 'medium' | 'large';\n\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n   onChangeText?: (value: string) => void\n   onEnter?: () => void\n   error?: string\n   spanClassName?: string\n   dimention?: DimentionType\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n   {\n      type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n      onChange, onChangeText,\n      onKeyPress, onEnter,\n      dimention = 'medium',\n      error,\n      className, spanClassName,\n\n      ...restProps// все остальные пропсы попадут в объект restProps\n   }\n) => {\n   const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n      onChange // если есть пропс onChange\n      && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n      onChangeText && onChangeText(e.currentTarget.value);\n   }\n   const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n      onKeyPress && onKeyPress(e);\n\n      e.key === 'Enter' // если нажата кнопка Enter\n      && onEnter // и есть пропс onEnter\n      && onEnter(); // то вызвать его\n   }\n\n   const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`;\n\n   const finalInputClassName = `\n      ${error ? s.errorInput : ''} \n      ${s.superInput} \n      ${dimention ? s[dimention] : ''}\n      ${className}\n   `;\n\n   return (\n      <>\n         <input\n            type=\"text\"\n            onChange={onChangeCallback}\n            onKeyPress={onKeyPressCallback}\n            className={finalInputClassName}\n\n            {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n         />\n         {error && <span className={finalSpanClassName}>{error}</span>}\n      </>\n   );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps, useState} from 'react';\nimport s from './SuperButton.module.css';\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype VariantType = 'primary' | 'secondary' | 'success' | 'danger' | 'warning';\ntype SizeType = 'small' | 'medium' | 'large';\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n   red?: boolean\n   size?: SizeType\n   variant?: VariantType\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n   {\n      variant,\n      size,\n      red,\n      className,\n      ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n   }\n) => {\n   const [isMouseDown, setIsMouseDown] = useState(false);\n\n   const finalClassName = `\n      ${s.button} \n      ${variant ? s[variant] : ''}\n      ${size ? s[size] : ''} \n      ${red ? s.red : ''}\n      ${isMouseDown? s.mouseDown : ''}\n      ${className}\n   `;\n\n\n   const onMouseDownHandler = () => setIsMouseDown(true);\n   const onMouseUpHandler = () => setIsMouseDown(false);\n\n   return (<>\n         <button className={finalClassName} onMouseDown={onMouseDownHandler} onMouseUp={onMouseUpHandler} {...restProps} />\n      </>\n   );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react';\nimport s from './SuperCheckbox.module.css';\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n   onChangeChecked?: (checked: boolean) => void\n   spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n   {\n      type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n      onChange, onChangeChecked,\n      className, spanClassName,\n      children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n      ...restProps// все остальные пропсы попадут в объект restProps\n   }\n) => {\n   const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n      // сделайте так чтоб работал onChange и onChangeChecked\n      onChange\n      && onChange(e);\n\n      onChangeChecked\n      && onChangeChecked(e.currentTarget.checked);\n   }\n\n   const finalInputClassName = `${s.checkbox} ${className ? className : ''}`;\n\n   return (\n      <label>\n         <input\n            type={'checkbox'}\n            onChange={onChangeCallback}\n            className={finalInputClassName}\n\n            {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n         />\n         {children && <span className={s.spanClassName}>{children}</span>}\n      </label> // благодаря label нажатие на спан передастся в инпут\n   );\n}\n\nexport default SuperCheckbox;\n","import axios from \"axios\";\n\nexport const baseURL = 'https://neko-back.herokuapp.com/2.0/';\n\nexport const instance = axios.create({\n    baseURL\n});","import {instance} from \"../../../../base-url\";\r\nimport axios from 'axios';\r\n\r\nexport interface ISignInData {\r\n\r\n}\r\n\r\n\r\nexport const SignInAPI = {\r\n   login(email: string, password: string, rememberMe: boolean) {\r\n      return instance.post<ResponseLoginType>('auth/login', {})\r\n         .then(response => response.data);\r\n   }\r\n};\r\n\r\n\r\n// types\r\nexport type ResponseLoginType = {\r\n   \"_id\": string,\r\n   \"email\": string,\r\n   \"rememberMe\": boolean,\r\n   \"isAdmin\": boolean,\r\n   \"name\": string,\r\n   \"verified\": boolean,\r\n   \"publicCardPacksCount\": number,\r\n   \"created\": string,\r\n   \"updated\": string,\r\n   \"__v\": number,\r\n   \"token\": string,\r\n   \"tokenDeathTime\": number\r\n}\r\n","import React, {ChangeEvent, MouseEvent, useState} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PROFILE_PATH} from '../../../../neko-1-main/m-1-ui/Routes';\r\nimport classes from '../../a-2-register/r-1-ui/Register.module.css';\r\nimport SuperInputText from '../../../../neko-1-main/m-1-ui/u1-common/components/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../../../../neko-1-main/m-1-ui/u1-common/components/c2-SuperButton/SuperButton';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {IAppStore} from '../../../../neko-1-main/m-2-bll/store';\r\nimport {setSignInError} from '../s-2-bll/b-2-redux/signInActions';\r\nimport SuperCheckbox from '../../../../neko-1-main/m-1-ui/u1-common/components/c3-SuperCheckbox/SuperCheckbox';\r\nimport {signIn} from '../s-2-bll/signInThunk';\r\n\r\ninterface ISignInProps {\r\n\r\n}\r\n\r\nconst SignIn: React.FC<ISignInProps> = (\r\n   {}\r\n) => {\r\n   console.log('render SignIn');\r\n   const dispatch = useDispatch();\r\n   const [email, setEmail] = useState<string>('');\r\n   const [password, setPassword] = useState<string>('');\r\n   const [rememberMe, setRememberMe] = useState<boolean>(false);\r\n\r\n\r\n   const isLoading = useSelector<IAppStore, boolean>(state => state.signIn.isLoading);\r\n   const error = useSelector<IAppStore, string | null>(state => state.signIn.error);\r\n   const isAuth = useSelector<IAppStore, string | boolean>(state => state.signIn.isAuth);\r\n\r\n   const changeEmailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n      if (error) {\r\n         dispatch(setSignInError(null));\r\n      }\r\n\r\n      setEmail(e.currentTarget.value);\r\n   }\r\n   const changePasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n      if (error) {\r\n         dispatch(setSignInError(null));\r\n      }\r\n\r\n      setPassword(e.currentTarget.value)\r\n   };\r\n\r\n   const changeRememberMeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n      if (error) {\r\n         dispatch(setSignInError(null));\r\n      }\r\n\r\n      setRememberMe(e.currentTarget.checked);\r\n   };\r\n\r\n   const submitHandler = (e: MouseEvent<HTMLButtonElement>) => {\r\n      dispatch(signIn(email, password, rememberMe));\r\n   }\r\n\r\n   if (isAuth) {\r\n      return <Redirect to={PROFILE_PATH}/>\r\n   }\r\n\r\n   return (\r\n      <div className={classes.container}>\r\n         {error && <div className={classes.error}>{error}</div>}\r\n         {isLoading && <div className={classes.preloader}>in progress...</div>}\r\n         <div className={classes.formControl}>\r\n            <SuperInputText type={'text'}\r\n                            name={'email'}\r\n                            value={email}\r\n                            onChange={changeEmailHandler}\r\n                            className={classes.forgotInput}\r\n                            placeholder='Email'\r\n            />\r\n         </div>\r\n         <div className={classes.formControl}>\r\n            <SuperInputText type={'text'}\r\n                            name={'password'}\r\n                            value={password}\r\n                            onChange={changePasswordHandler}\r\n                            className={classes.forgotInput}\r\n                            placeholder='Password'\r\n            />\r\n         </div>\r\n         <div className={classes.formControl}>\r\n            <SuperCheckbox type={'checkbox'}\r\n                           name={'rememberMe'}\r\n                           checked={rememberMe}\r\n                           onChange={changeRememberMeHandler}\r\n            /> Remember me\r\n         </div>\r\n         <div>\r\n            <SuperButton variant={'primary'} size={'large'} onClick={submitHandler}>sign in</SuperButton>\r\n         </div>\r\n\r\n         {/*<div className={classes.link}>\r\n            <NavLink to={SIGN_IN_PATH}>login</NavLink>\r\n         </div>*/}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default SignIn;\r\n","import {ThunkAction, ThunkDispatch} from 'redux-thunk';\r\nimport {IAppStore} from '../../../../neko-1-main/m-2-bll/store';\r\nimport {setIsAuth, setProfileData, setSignInError, setSignInLoading, SignInActions} from './b-2-redux/signInActions';\r\nimport {INekoActions} from '../../../f-4-social/s-1-neko/n-2-bll/b-2-redux/nekoActions';\r\nimport {SignInAPI} from '../s-3-dal/SignInAPI';\r\n\r\ntype Return = void;\r\ntype ExtraArgument = {};\r\ntype IGetStore = () => IAppStore;\r\n\r\n\r\nexport const signIn =\r\n    (email: string, password: string, rememberMe: boolean)\r\n        : ThunkAction<Return, IAppStore, ExtraArgument, SignInActions> =>\r\n        async (\r\n            dispatch: ThunkDispatch<IAppStore, ExtraArgument, SignInActions | INekoActions>,\r\n            getStore: IGetStore\r\n        ) => {\r\n            try {\r\n               dispatch(setSignInError(null));\r\n               dispatch(setSignInLoading(true));\r\n\r\n               const data = await SignInAPI.login(email, password, rememberMe);\r\n\r\n               dispatch(setProfileData(data));\r\n               dispatch(setIsAuth(true));\r\n            } catch(error) {\r\n               if (error.response) {\r\n                  const data = error.response.data;\r\n\r\n                  dispatch(setSignInError(data.error));\r\n               } else {\r\n                  dispatch(setSignInError(error.message));\r\n               }\r\n            } finally {\r\n               dispatch(setSignInLoading(false));\r\n            }\r\n        };\r\n","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport SignIn from \"./SignIn\";\r\nimport Disconnect from \"./Disconnect\";\r\n\r\nconst SignInContainer: React.FC = () => {\r\n\r\n    // redirect logic\r\n\r\n    return (\r\n        <SignIn\r\n\r\n        />\r\n    );\r\n};\r\n\r\nexport default SignInContainer;\r\n","import React from 'react';\r\nimport SignInContainer from \"./SignInContainer\";\r\n\r\nconst SignInPage: React.FC = () => {\r\n    console.log('render SignInPage');\r\n    return (\r\n        <SignInContainer/>\r\n    );\r\n};\r\n\r\nexport default SignInPage;\r\n","import {instance} from \"../../../../base-url\";\r\n\r\nexport interface IRegisterData {\r\n\r\n}\r\n\r\nexport const RegisterAPI = {\r\n   register(email: string, password: string) {\r\n      return instance.post<ResponseRegisterType>('auth/register', {email, password}).then(response => response.data);\r\n   }\r\n};\r\n\r\n\r\n// types\r\ntype ResponseRegisterType = {\r\n   \"addedUser\": {\r\n      \"_id\": string,\r\n      \"email\": string,\r\n      \"rememberMe\": boolean,\r\n      \"isAdmin\": boolean,\r\n      \"name\": string,\r\n      \"verified\": boolean,\r\n      \"publicCardPacksCount\": number,\r\n      \"created\": string,\r\n      \"updated\": string,\r\n      \"__v\": number\r\n   },\r\n   error?: string\r\n}\r\n","import React, {ChangeEvent, MouseEvent, useEffect, useState} from 'react';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {SIGN_IN_PATH} from '../../../../neko-1-main/m-1-ui/Routes';\r\nimport classes from './Register.module.css';\r\nimport SuperInputText from '../../../../neko-1-main/m-1-ui/u1-common/components/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../../../../neko-1-main/m-1-ui/u1-common/components/c2-SuperButton/SuperButton';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {IAppStore} from '../../../../neko-1-main/m-2-bll/store';\r\nimport {setRegisterError, setRegisterSuccess} from '../r-2-bll/b-2-redux/registerActions';\r\nimport {register} from '../r-2-bll/registerThunk';\r\n\r\ninterface IRegisterProps {\r\n\r\n}\r\n\r\nconst Register: React.FC<IRegisterProps> = (\r\n   {}\r\n) => {\r\n   const dispatch = useDispatch();\r\n   const [firstPassword, setFirstPassword] = useState<string>('');\r\n   const [secondPassword, setSecondPassword] = useState<string>('');\r\n   const [email, setEmail] = useState<string>('');\r\n\r\n   useEffect(() => {\r\n     return () => {\r\n        dispatch(setRegisterSuccess(false));\r\n     }\r\n   })\r\n\r\n   const isLoading = useSelector<IAppStore, boolean>(state => state.register.isLoading);\r\n   const error = useSelector<IAppStore, string | null>(state => state.register.error);\r\n   const isSuccess = useSelector<IAppStore, string | boolean>(state => state.register.isSuccess);\r\n\r\n   const changeEmailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n      if (error) {\r\n         dispatch(setRegisterError(null));\r\n      }\r\n\r\n      setEmail(e.currentTarget.value);\r\n   }\r\n   const changeFirstPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n      if (error) {\r\n         dispatch(setRegisterError(null));\r\n      }\r\n\r\n      setFirstPassword(e.currentTarget.value)\r\n   };\r\n\r\n   const changeSecondPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n      if (error) {\r\n         dispatch(setRegisterError(null));\r\n      }\r\n\r\n      setSecondPassword(e.currentTarget.value)\r\n   };\r\n\r\n   const submitHandler = (e: MouseEvent<HTMLButtonElement>) => {\r\n      if (firstPassword === secondPassword) {\r\n         dispatch(register(email, secondPassword));\r\n      } else {\r\n         dispatch(setRegisterError(\"Passwords don\\'t match!\"));\r\n      }\r\n   }\r\n\r\n   if (isSuccess) {\r\n      return <Redirect to={SIGN_IN_PATH}/>\r\n   }\r\n\r\n   return (\r\n      <div className={classes.container}>\r\n         {error && <div className={classes.error}>{error}</div>}\r\n         {isLoading && <div className={classes.preloader}>in progress...</div>}\r\n         <div className={classes.formControl}>\r\n            <SuperInputText type={'text'}\r\n                            name={'email'}\r\n                            value={email}\r\n                            onChange={changeEmailHandler}\r\n                            className={classes.forgotInput}\r\n                            placeholder='Email:'\r\n            />\r\n         </div>\r\n         <div className={classes.formControl}>\r\n            <SuperInputText type={'text'}\r\n                            name={'first-password'}\r\n                            value={firstPassword}\r\n                            onChange={changeFirstPasswordHandler}\r\n                            className={classes.forgotInput}\r\n                            placeholder='Password:'\r\n            />\r\n         </div>\r\n         <div className={classes.formControl}>\r\n            <SuperInputText type={'text'}\r\n                            name={'second-password'}\r\n                            value={secondPassword}\r\n                            onChange={changeSecondPasswordHandler}\r\n                            className={classes.forgotInput}\r\n                            placeholder='Confirm password:'\r\n            />\r\n         </div>\r\n         <div>\r\n            <SuperButton variant={'primary'} size={'large'} onClick={submitHandler}>sign up</SuperButton>\r\n         </div>\r\n\r\n         <div className={classes.link}>\r\n            <NavLink to={SIGN_IN_PATH}>login</NavLink>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Register;\r\n","import {ThunkAction, ThunkDispatch} from 'redux-thunk';\r\nimport {IAppStore} from '../../../../neko-1-main/m-2-bll/store';\r\nimport {RegisterActions, setRegisterError, setRegisterLoading, setRegisterSuccess} from './b-2-redux/registerActions';\r\nimport {RegisterAPI} from '../r-3-dal/RegisterAPI';\r\nimport {ResponseErrorForgotPasswordType} from '../../a-3-forgot/f-3-dal/ForgotAPI';\r\nimport {setForgotError, setForgotLoading} from '../../a-3-forgot/f-2-bll/b-2-redux/forgotActions';\r\n\r\ntype Return = void;\r\ntype ExtraArgument = {};\r\ntype IGetStore = () => IAppStore;\r\n\r\n\r\nexport const register =\r\n   (email: string, password: string): ThunkAction<Return, IAppStore, ExtraArgument, RegisterActions> =>\r\n      async (dispatch: ThunkDispatch<IAppStore, ExtraArgument, RegisterActions>, getStore: IGetStore) => {\r\n         try {\r\n            dispatch(setRegisterError(null));\r\n            dispatch(setRegisterLoading(true));\r\n\r\n            const data = await RegisterAPI.register(email, password);\r\n\r\n            dispatch(setRegisterSuccess(true));\r\n         } catch (error) {\r\n            if (error.response) {\r\n               const data = error.response.data;\r\n\r\n               dispatch(setRegisterError(data.error));\r\n            } else {\r\n               dispatch(setRegisterError(error.message));\r\n            }\r\n         } finally {\r\n            dispatch(setRegisterLoading(false));\r\n         }\r\n      };\r\n","import React from 'react';\r\nimport {Redirect} from \"react-router\";\r\nimport {SIGN_IN_PATH} from \"../../../../neko-1-main/m-1-ui/Routes\";\r\nimport Register from './Register';\r\n\r\nconst RegisterContainer: React.FC = () => {\r\n\r\n    // redirect logic\r\n\r\n\r\n    return (\r\n        <Register\r\n\r\n        />\r\n    );\r\n};\r\n\r\nexport default RegisterContainer;\r\n","import React from 'react';\r\nimport RegisterContainer from \"./RegisterContainer\";\r\n\r\nconst RegisterPage: React.FC = () => {\r\n    console.log('render RegisterPage');\r\n    return (\r\n        <RegisterContainer/>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import {instance} from '../../../../base-url';\n\nexport const ForgotAPI = {\n   forgotPassword: (email: string) => {\n      return instance.post<ResponseForgotPasswordType>('/auth/forgot', {\n            email,\n            from: 'front-admin <serhioromanchuk@gmail.com>',\n            message: `<div style=\"background-color: lime; padding: 15px\">\t\n\t                         password recovery link: \t\t\n\t                         <a href='https://borec22.github.io/cards-ts/#/set-new-password/$token$'>link</a>\n\t                      </div>`\n\n         }\n      ).then(response => response.data);\n   }\n}\n\n\n// types\ntype ResponseForgotPasswordType = {\n   info: string,\n   success: boolean,\n   answer: boolean,\n   html: boolean\n}\n\nexport type ResponseErrorForgotPasswordType = {\n   \"error\": string,\n   \"body\": boolean,\n   \"in\": string\n}\n","import React, {ChangeEvent, MouseEvent, useEffect, useState} from 'react';\nimport classes from './Forgot.module.css';\nimport SuperInputText from '../../../../neko-1-main/m-1-ui/u1-common/components/c1-SuperInputText/SuperInputText';\nimport SuperButton from '../../../../neko-1-main/m-1-ui/u1-common/components/c2-SuperButton/SuperButton';\nimport {NavLink} from 'react-router-dom';\nimport {SIGN_IN_PATH} from '../../../../neko-1-main/m-1-ui/Routes';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {IAppStore} from '../../../../neko-1-main/m-2-bll/store';\nimport {forgotPassword} from '../f-2-bll/forgotThunk';\nimport {seForgotSuccess} from '../f-2-bll/b-2-redux/forgotActions';\n\ninterface IForgotProps {\n\n}\n\nconst Forgot: React.FC<IForgotProps> = (\n   {}\n) => {\n   const [email, setEmail] = useState<string>('');\n   console.log('render SetPass');\n   const dispatch = useDispatch();\n   const isSuccess = useSelector<IAppStore, boolean>(state => state.forgot.isSuccess);\n   const isLoading = useSelector<IAppStore, boolean>(state => state.forgot.isLoading);\n   const error = useSelector<IAppStore, string | null>(state => state.forgot.error);\n\n   useEffect(() => {\n\n      return () => {\n         dispatch(seForgotSuccess(false));\n      }\n   }, []);\n\n\n   const changeEmailHandler = (e: ChangeEvent<HTMLInputElement>) => {\n      setEmail(e.currentTarget.value);\n   }\n\n   const submitHandler = (e: MouseEvent<HTMLButtonElement>) => {\n      dispatch(forgotPassword(email));\n   }\n\n   return (\n      <div className={classes.container}>\n         {isSuccess ?\n            <div>\n               <p className={classes.success}>Success!</p>\n               <p>click the link in the message in your email</p>\n            </div> :\n\n            <>\n               {error && <div className={classes.error}>{error}</div>}\n               {isLoading && <div className={classes.preloader}>in progress...</div>}\n               <div className={classes.formControl}>\n                  <SuperInputText type={'email'}\n                                  name={'email'}\n                                  value={email}\n                                  onChange={changeEmailHandler}\n                                  className={classes.forgotInput}\n                                  placeholder='Enter your email:'\n                  />\n               </div>\n               <div>\n                  <SuperButton variant={'primary'} size={'large'} onClick={submitHandler}>send</SuperButton>\n               </div>\n            </>\n         }\n         <div className={classes.link}>\n            <NavLink to={SIGN_IN_PATH}>login</NavLink>\n         </div>\n      </div>\n   );\n};\n\nexport default Forgot;\n","import {ThunkAction, ThunkDispatch} from 'redux-thunk';\nimport {IAppStore} from '../../../../neko-1-main/m-2-bll/store';\nimport {seForgotSuccess, IForgotActions, setForgotError, setForgotLoading} from './b-2-redux/forgotActions';\nimport {ForgotAPI, ResponseErrorForgotPasswordType} from '../f-3-dal/ForgotAPI';\n\ntype Return = void;\ntype ExtraArgument = {};\ntype IGetStore = () => IAppStore;\n\nexport const forgotPassword = (email: string): ThunkAction<Return, IAppStore, ExtraArgument, IForgotActions> =>\n   async (dispatch: ThunkDispatch<IAppStore, ExtraArgument, IForgotActions>, getStore: IGetStore) => {\n      try {\n         dispatch(setForgotError(null));\n         dispatch(setForgotLoading(true));\n         let data = await ForgotAPI.forgotPassword(email);\n\n         if (data.success) {\n            dispatch(seForgotSuccess(true));\n         }\n      } catch (error) {\n         if (error.response) {\n            const data: ResponseErrorForgotPasswordType = error.response.data;\n\n            dispatch(setForgotError(data.error));\n         } else {\n            dispatch(setForgotError(error.message));\n         }\n      } finally {\n         dispatch(setForgotLoading(false));\n      }\n   };\n","import React from 'react';\nimport {Redirect} from \"react-router\";\nimport {SIGN_IN_PATH} from \"../../../../neko-1-main/m-1-ui/Routes\";\nimport Forgot from './Forgot';\n\nconst ForgotContainer: React.FC = () => {\n    // redirect logic\n\n    return (\n        <Forgot\n\n        />\n    );\n};\n\nexport default ForgotContainer;\n","import React from 'react';\r\nimport ForgotContainer from './ForgotContainer';\r\n\r\nconst ForgotPage: React.FC = () => {\r\n    console.log('render SetPassPage');\r\n    return (\r\n        <ForgotContainer/>\r\n    );\r\n};\r\n\r\nexport default ForgotPage;\r\n","import React from 'react';\r\n\r\ninterface INekoProps {\r\n\r\n}\r\n\r\nconst Neko: React.FC<INekoProps> = (\r\n    {\r\n\r\n    }\r\n) => {\r\n\r\n    console.log('render Neko');\r\n    return (\r\n        <div>\r\n            Neko\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Neko;\r\n","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {SIGN_IN_PATH} from \"../../../../neko-1-main/m-1-ui/Routes\";\r\nimport Neko from \"./Neko\";\r\n\r\nconst NekoContainer: React.FC = () => {\r\n\r\n\r\n    // redirect logic\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Neko\r\n\r\n        />\r\n    );\r\n};\r\n\r\nexport default NekoContainer;\r\n","import React from 'react';\r\nimport NekoContainer from \"./NekoContainer\";\r\n\r\nconst NekoPage: React.FC = () => {\r\n    console.log('render NekoPage');\r\n    return (\r\n        <NekoContainer/>\r\n    );\r\n};\r\n\r\nexport default NekoPage;\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react';\nimport s from './SuperSelect.module.css';\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\nexport type SuperSelectPropsType = DefaultSelectPropsType & {\n   options?: any[]\n   onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n   {\n      options,\n      onChange, onChangeOption,\n      ...restProps\n   }\n) => {\n   const mappedOptions: any[] = options ? options.map((o, index) => (\n      <option key={index} value={o} className={s.option}>\n         {o}\n      </option>\n   )) : [];\n\n   const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n      onChange && onChange(e);\n      onChangeOption && onChangeOption(e.currentTarget.value);\n   }\n\n   return (\n      <select className={s.select} onChange={onChangeCallback}  {...restProps}>\n         {mappedOptions}\n      </select>\n   );\n}\n\nexport default SuperSelect;\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react';\nimport s from './SuperRadio.module.css'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n   options?: any[]\n   onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n   {\n      type, name,\n      options, value,\n      onChange, onChangeOption,\n      ...restProps\n   }\n) => {\n   const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n      onChange && onChange(e)\n      onChangeOption && onChangeOption(e.currentTarget.value);\n   }\n\n\n   const mappedOptions: any[] = options ? options.map((o, i) => (\n      <label key={name + '-' + i} className={s.radioItem}>\n         <input\n            type={'radio'}\n            name={name}\n            value={o}\n            onChange={onChangeCallback}\n            checked={value === o}\n         />\n         {o}\n      </label>\n   )) : [];\n\n   return (\n      <div className={s.radioGroup}>\n         {mappedOptions}\n      </div>\n   );\n}\n\nexport default SuperRadio;\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react';\nimport s from './SuperEditableSpan.module.css';\nimport {MdEdit} from 'react-icons/md';\nimport SuperInputText from '../c1-SuperInputText/SuperInputText';\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n   onChangeText?: (value: string) => void\n   onEnter?: () => void\n   error?: string\n   spanClassName?: string\n\n   spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n   {\n      autoFocus, // игнорировать изменение этого пропса\n      onBlur,\n      onEnter,\n      spanProps,\n\n      ...restProps// все остальные пропсы попадут в объект restProps\n   }\n) => {\n   const [editMode, setEditMode] = useState<boolean>(false);\n   const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\n\n   const onEnterCallback = () => {\n      setEditMode(false); // выключить editMode при нажатии Enter\n\n      onEnter && onEnter();\n   };\n   const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n      setEditMode(false); // выключить editMode при нажатии за пределами инпута\n\n      onBlur && onBlur(e);\n   };\n   const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n      setEditMode(true); // включить editMode при двойном клике\n\n      onDoubleClick && onDoubleClick(e);\n   };\n\n   const spanClassName = `${s.span} ${className}`;\n\n   return (\n      <>\n         {editMode\n            ? (\n               <SuperInputText\n                  autoFocus // пропсу с булевым значением не обязательно указывать true\n                  onBlur={onBlurCallback}\n                  onEnter={onEnterCallback}\n                  className={s.input}\n\n                  {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n               />\n            ) : (\n               <span\n                  onDoubleClick={onDoubleClickCallBack}\n                  className={spanClassName}\n\n                  {...restSpanProps}\n               >\n                  <MdEdit/>\n                  {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                  {children || restProps.value}\n               </span>\n            )\n         }\n      </>\n   );\n}\n\nexport default SuperEditableSpan;\n","import React, {ChangeEvent, useState} from 'react';\nimport classes from './demoSuperComponentsStand.module.css';\nimport SuperInputText from '../components/c1-SuperInputText/SuperInputText';\nimport SuperButton from '../components/c2-SuperButton/SuperButton';\nimport SuperCheckbox from '../components/c3-SuperCheckbox/SuperCheckbox';\nimport SuperSelect from '../components/c5-SuperSelect/SuperSelect';\nimport SuperRadio from '../components/c6-SuperRadio/SuperRadio';\nimport SuperEditableSpan from '../components/c4-SuperEditableSpan/SuperEditableSpan';\n\n\nexport const DemoSuperComponentsStand = () => {\n   const [text, setText] = useState<string>('');\n   const [editableSpanValue, setEditableSpanValue] = useState<string>(\"\");\n   const [checked, setChecked] = useState<boolean>(false);\n\n   const arr = ['x', 'y', 'z'];\n   const [value, onChangeOption] = useState(arr[0]);\n\n   const onChangeChecked = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n\n   return (\n      <div className={classes.demo}>\n         <SuperInputText value={text}\n                         dimention={'small'}\n                         onChangeText={setText}/>\n         <br/>\n         <SuperButton size={'medium'} variant={'success'}>OK</SuperButton>\n         <br/>\n         <SuperCheckbox checked={checked} onChangeChecked={setChecked}/>\n         <br/>\n         <SuperSelect options={arr}\n                      value={value}\n                      onChangeOption={onChangeOption}\n                      style={{margin: '15px 0'}}/>\n         <br/>\n         <SuperRadio name={'radio'}\n                     options={arr}\n                     value={value}\n                     onChangeOption={onChangeOption}/>\n         <br/>\n         <SuperEditableSpan value={editableSpanValue}\n                            onChangeText={setEditableSpanValue}\n                            spanProps={{children: value ? undefined : \"enter text...\"}}/>\n      </div>\n   );\n}","import {instance} from '../../../../base-url';\n\nexport const SetPassAPI = {\n   setPassword(password: string, token: string) {\n      return instance.post<ResponseSetPasswordType>(`auth/set-new-password`, {\n         'password': password,\n         'resetPasswordToken': token\n      })\n         .then(response => response.data)\n   }\n}\n\n// types\ntype ResponseSetPasswordType = {\n   'error': string\n   'method': string\n   'url': string\n   'query': Object\n   'body': {\n      'password': string\n      'resetPasswordToken': string\n   }\n}\n\nexport type ResponseErrorSetPasswordType = {\n   \"error\": string,\n   \"body\": boolean,\n   \"in\": string\n}\n\n\n// serhioromanchuk@gmail.com\n// aezakmi22\n// qazwsx123\n","import React, {ChangeEvent, MouseEvent, useState} from 'react';\nimport classes from '../../a-3-forgot/f-1-ui/Forgot.module.css';\nimport SuperInputText from '../../../../neko-1-main/m-1-ui/u1-common/components/c1-SuperInputText/SuperInputText';\nimport SuperButton from '../../../../neko-1-main/m-1-ui/u1-common/components/c2-SuperButton/SuperButton';\nimport {NavLink, Redirect, useParams} from 'react-router-dom';\nimport {SIGN_IN_PATH} from '../../../../neko-1-main/m-1-ui/Routes';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {IAppStore} from '../../../../neko-1-main/m-2-bll/store';\nimport {setNewPasswordError} from '../s-2-bll/b-2-redux/setPassActions';\nimport {setNewPassword} from '../s-2-bll/setPassThunk';\n\ninterface IForgotProps {\n\n}\n\nconst SetPass: React.FC<IForgotProps> = (\n   {}\n   ) => {\n      const [firstPassword, setFirstPassword] = useState<string>('');\n      const [secondPassword, setSecondPassword] = useState<string>('');\n\n      const dispatch = useDispatch();\n      const { token } = useParams<{token?: string}>();\n\n      const isLoading = useSelector<IAppStore, boolean>(state => state.setPass.isLoading);\n      const error = useSelector<IAppStore, string | null>(state => state.setPass.error);\n      const isSuccess = useSelector<IAppStore, string | boolean>(state => state.setPass.isSuccess);\n\n      const changeFirstPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\n         if (error) {\n            dispatch(setNewPasswordError(null));\n         }\n\n         setFirstPassword(e.currentTarget.value)\n      };\n      const changeSecondPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\n         if (error) {\n            dispatch(setNewPasswordError(null));\n         }\n\n         setSecondPassword(e.currentTarget.value)\n      };\n\n      const submitHandler = (e: MouseEvent<HTMLButtonElement>) => {\n         if (firstPassword === secondPassword) {\n           token && dispatch(setNewPassword(secondPassword, token));\n         } else {\n            dispatch(setNewPasswordError(\"Passwords don\\'t match!\"));\n         }\n      }\n\n      if (isSuccess) {\n         return <Redirect to={SIGN_IN_PATH}/>\n      }\n\n      return (\n         <div className={classes.container}>\n            {error && <div className={classes.error}>{error}</div>}\n            {isLoading && <div className={classes.preloader}>in progress...</div>}\n            <div className={classes.formControl}>\n               <SuperInputText type={'text'}\n                               name={'first-password'}\n                               value={firstPassword}\n                               onChange={changeFirstPasswordHandler}\n                               className={classes.forgotInput}\n                               placeholder='Password:'\n               />\n            </div>\n            <div className={classes.formControl}>\n               <SuperInputText type={'text'}\n                               name={'second-password'}\n                               value={secondPassword}\n                               onChange={changeSecondPasswordHandler}\n                               className={classes.forgotInput}\n                               placeholder='Confirm password:'\n               />\n            </div>\n            <div>\n               <SuperButton variant={'primary'} size={'large'} onClick={submitHandler}>set password</SuperButton>\n            </div>\n\n            <div className={classes.link}>\n               <NavLink to={SIGN_IN_PATH}>login</NavLink>\n            </div>\n         </div>\n      );\n   }\n;\n\nexport default SetPass;\n","import {ThunkAction, ThunkDispatch} from 'redux-thunk';\nimport {IAppStore} from '../../../../neko-1-main/m-2-bll/store';\nimport {\n   ISetPassActions,\n   setNewPasswordError,\n   setNewPasswordLoading,\n   setNewPasswordSuccess\n} from './b-2-redux/setPassActions';\nimport {ResponseErrorSetPasswordType, SetPassAPI} from '../s-3-dal/SetPassAPI';\nimport {ResponseErrorForgotPasswordType} from '../../a-3-forgot/f-3-dal/ForgotAPI';\nimport {setForgotError, setForgotLoading} from '../../a-3-forgot/f-2-bll/b-2-redux/forgotActions';\n//import {setForgotError, setForgotLoading} from '../../a-3-forgot/f-2-bll/b-2-redux/forgotActions';\n\ntype Return = void;\ntype ExtraArgument = {};\ntype IGetStore = () => IAppStore;\n\nexport const setNewPassword = (password: string, token: string): ThunkAction<Return, IAppStore, ExtraArgument, ISetPassActions> =>\n    async (dispatch: ThunkDispatch<IAppStore, ExtraArgument, ISetPassActions>, getStore: IGetStore) => {\n\n      try {\n         dispatch(setNewPasswordError(null));\n         dispatch(setNewPasswordLoading(true));\n\n         const data = await SetPassAPI.setPassword(password, token);\n\n         dispatch(setNewPasswordSuccess(true));\n\n      } catch (error) {\n         if (error.response) {\n            const data: ResponseErrorSetPasswordType = error.response.data;\n\n            dispatch(setNewPasswordError(data.error));\n         } else {\n            dispatch(setNewPasswordError(error.message));\n         }\n\n      } finally {\n         dispatch(setNewPasswordLoading(false));\n      }\n   };\n","import React from 'react';\nimport {Redirect} from \"react-router\";\nimport {SIGN_IN_PATH} from \"../../../../neko-1-main/m-1-ui/Routes\";\nimport SetPass from './SetPass';\n\nconst SetPassContainer: React.FC = () => {\n    // redirect logic\n\n    return (\n        <SetPass\n\n        />\n    );\n};\n\nexport default SetPassContainer;\n","import React from 'react';\r\nimport SetPassContainer from './SetPassContainer';\r\n\r\nconst SetPassPage: React.FC = () => {\r\n    console.log('render SetPassPage');\r\n    return (\r\n        <SetPassContainer/>\r\n    );\r\n};\r\n\r\nexport default SetPassPage;\r\n","import React from 'react';\nimport {Redirect, Route} from 'react-router-dom';\nimport SignInPage from '../../neko-2-features/f-1-authorization/a-1-sign-in/s-1-ui/SignInPage';\nimport RegisterPage from '../../neko-2-features/f-1-authorization/a-2-register/r-1-ui/RegisterPage';\nimport ForgotPage from '../../neko-2-features/f-1-authorization/a-3-forgot/f-1-ui/ForgotPage';\nimport NekoPage from '../../neko-2-features/f-4-social/s-1-neko/n-1-ui/NekoPage';\nimport {DemoSuperComponentsStand} from './u1-common/demoSuperComponentsStand/demoSuperComponentsStand';\nimport SetPassPage from '../../neko-2-features/f-1-authorization/a-4-set-password/s-1-ui/SetPassPage';\n\n// all project paths\nexport const SIGN_IN_PATH = '/sign-in';\nexport const REGISTER_PATH = '/register';\nexport const FORGOT_PATH = '/forgot';\n\nexport const SET_NEW_PASSWORD_PATH = '/set-new-password/:token?';\n\nexport const PROFILE_PATH = '/neko';\nexport const STAND_PATH = '/stand'; // stand to show super components\n\nconst Routes: React.FC = () => {\n    return (\n        <>\n            <Route exact path={'/'} render={() => <Redirect to={SIGN_IN_PATH}/>}/>\n\n            <Route path={SIGN_IN_PATH} render={() => <SignInPage/>}/>\n            <Route path={REGISTER_PATH} render={() => <RegisterPage/>}/>\n            <Route path={FORGOT_PATH} render={() => <ForgotPage/>}/>\n            <Route path={SET_NEW_PASSWORD_PATH} render={() => <SetPassPage/>}/>\n\n            <Route path={PROFILE_PATH} render={() => <NekoPage/>}/>\n            <Route path={STAND_PATH} render={() => <DemoSuperComponentsStand/>}/>\n        </>\n    );\n};\n\nexport default Routes;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport {FORGOT_PATH, PROFILE_PATH, REGISTER_PATH, SET_NEW_PASSWORD_PATH, SIGN_IN_PATH, STAND_PATH} from './Routes';\n\nconst Header: React.FC = () => {\n\n   return (\n      <div style={{\n         display: 'flex',\n         alignItems: 'center',\n         justifyContent: 'space-around',\n         flexWrap: 'wrap',\n      }}>\n         {/*<button onClick={() => setShow(!show)}>{show ? 'hide dev header' : 'show dev header'}</button>*/}\n\n         <NavLink to={SIGN_IN_PATH}>sign-in</NavLink>\n         <NavLink to={REGISTER_PATH}>register</NavLink>\n         <NavLink to={FORGOT_PATH}>forgot</NavLink>\n         <NavLink to={SET_NEW_PASSWORD_PATH}>set password</NavLink>\n\n         <NavLink to={PROFILE_PATH}>neko</NavLink>\n         <NavLink to={STAND_PATH}>stand</NavLink>\n      </div>\n   );\n};\n\nexport default Header;\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\n\r\n// headers, routes, footers\r\nconst Main: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Header/>\r\n\r\n            <Routes/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport './App.css';\r\nimport store from \"./neko-1-main/m-2-bll/store\";\r\nimport Main from \"./neko-1-main/m-1-ui/Main\";\r\n\r\n// add context\r\nconst App: React.FC = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <HashRouter>\r\n                <Provider store={store}>\r\n                    <Main/>\r\n                </Provider>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Forgot_container__17lr3\",\"formControl\":\"Forgot_formControl__3Y4N0\",\"link\":\"Forgot_link__3V1ES\",\"success\":\"Forgot_success__3Sj-C\",\"error\":\"Forgot_error__3mbRB\",\"preloader\":\"Forgot_preloader__3dqeg\"};"],"sourceRoot":""}