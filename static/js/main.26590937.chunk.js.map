{"version":3,"sources":["neko-2-features/f-1-authorization/a-1-sign-in/s-2-bll/b-2-redux/signInInitialState.ts","neko-2-features/f-1-authorization/a-1-sign-in/s-2-bll/b-2-redux/signInActions.ts","neko-2-features/f-1-authorization/a-2-register/r-2-bll/b-2-redux/registerInitialState.ts","neko-2-features/f-1-authorization/a-2-register/r-2-bll/b-2-redux/registerActions.ts","neko-2-features/f-1-authorization/a-3-forgot/f-2-bll/b-2-redux/forgotInitialState.ts","neko-2-features/f-1-authorization/a-3-forgot/f-2-bll/b-2-redux/forgotActions.ts","neko-2-features/f-4-social/s-1-neko/n-2-bll/b-2-redux/nekoInitialState.ts","neko-1-main/m-2-bll/store.ts","neko-2-features/f-1-authorization/a-1-sign-in/s-2-bll/b-2-redux/signInReducer.ts","neko-2-features/f-1-authorization/a-2-register/r-2-bll/b-2-redux/registerReducer.ts","neko-2-features/f-1-authorization/a-3-forgot/f-2-bll/b-2-redux/forgotReducer.ts","neko-2-features/f-4-social/s-1-neko/n-2-bll/b-2-redux/nekoReducer.ts","neko-2-features/f-1-authorization/a-1-sign-in/s-1-ui/SignIn.tsx","neko-2-features/f-1-authorization/a-1-sign-in/s-1-ui/SignInContainer.tsx","neko-2-features/f-1-authorization/a-1-sign-in/s-1-ui/SignInPage.tsx","neko-2-features/f-1-authorization/a-2-register/r-1-ui/Register.tsx","neko-2-features/f-1-authorization/a-2-register/r-1-ui/RegisterContainer.tsx","neko-2-features/f-1-authorization/a-2-register/r-1-ui/RegisterPage.tsx","neko-2-features/f-1-authorization/a-3-forgot/f-1-ui/Forgot.tsx","neko-2-features/f-1-authorization/a-3-forgot/f-1-ui/ForgotContainer.tsx","neko-2-features/f-1-authorization/a-3-forgot/f-1-ui/ForgotPage.tsx","neko-2-features/f-4-social/s-1-neko/n-1-ui/Neko.tsx","neko-2-features/f-4-social/s-1-neko/n-1-ui/NekoContainer.tsx","neko-2-features/f-4-social/s-1-neko/n-1-ui/NekoPage.tsx","neko-1-main/m-1-ui/Routes.tsx","neko-1-main/m-1-ui/Header.tsx","neko-1-main/m-1-ui/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["signInInitialState","SIGN_IN","registerInitialState","REGISTER","forgotInitialState","FORGOT","nekoInitialState","reducers","combineReducers","signIn","state","action","type","register","forgot","neko","store","createStore","applyMiddleware","thunkMiddleware","window","SignIn","console","log","SignInContainer","SignInPage","Register","RegisterContainer","RegisterPage","Forgot","ForgotContainer","ForgotPage","Neko","NekoContainer","NekoPage","SIGN_IN_PATH","REGISTER_PATH","FORGOT_PATH","NEKO_PATH","Routes","exact","path","render","to","Header","useState","show","setShow","style","display","alignItems","justifyContent","flexWrap","onClick","Main","App","className","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.26590937.chunk.js","sourcesContent":["export interface ISignInState { // blank\r\n\r\n}\r\n\r\nexport const signInInitialState: ISignInState = { // blank\r\n\r\n};\r\n","export const SIGN_IN_LOADING = 'SIGN_IN/LOADING';\r\nexport const SIGN_IN_ERROR = 'SIGN_IN/ERROR';\r\nexport const SIGN_IN_SUCCESS = 'SIGN_IN/SUCCESS';\r\n\r\nexport const SIGN_IN = 'SIGN_IN/SOME'; // blank\r\n\r\ninterface ISignInSome { // blank\r\n    type: typeof SIGN_IN;\r\n\r\n}\r\n\r\nexport type ISignInActions = ISignInSome;\r\n\r\nexport const signInSome = (): ISignInSome => ({ // blank\r\n    type: SIGN_IN,\r\n\r\n});\r\n\r\n","export interface IRegisterState { // blank\r\n\r\n}\r\n\r\nexport const registerInitialState: IRegisterState = { // blank\r\n\r\n};\r\n","export const REGISTER_LOADING = 'REGISTER/LOADING';\r\nexport const REGISTER_ERROR = 'REGISTER/ERROR';\r\nexport const REGISTER_SUCCESS = 'REGISTER/SUCCESS';\r\n\r\nexport const REGISTER = 'REGISTER/SOME';\r\n\r\ninterface IRegisterSome { // blank\r\n    type: typeof REGISTER;\r\n\r\n}\r\n\r\nexport type IRegisterActions = IRegisterSome;\r\n\r\nexport const registerSome = (): IRegisterSome => ({ // blank\r\n    type: REGISTER,\r\n\r\n});\r\n","export interface IForgotState { // blank\r\n\r\n}\r\n\r\nexport const forgotInitialState: IForgotState = { // blank\r\n\r\n};\r\n","export const FORGOT_LOADING = 'FORGOT/LOADING';\r\nexport const FORGOT_ERROR = 'FORGOT/ERROR';\r\nexport const FORGOT_SUCCESS = 'FORGOT/SUCCESS';\r\n\r\nexport const FORGOT = 'FORGOT/SOME';\r\n\r\ninterface IForgotSome { // blank\r\n    type: typeof FORGOT;\r\n\r\n}\r\n\r\nexport type IForgotActions = IForgotSome;\r\n\r\nexport const forgotSome = (): IForgotSome => ({ // blank\r\n    type: FORGOT,\r\n\r\n});\r\n\r\n","export interface INekoState {\r\n\r\n}\r\n\r\nexport const nekoInitialState: INekoState = {\r\n\r\n};\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport  thunkMiddleware from \"redux-thunk\"\r\nimport {signInReducer} from \"../../neko-2-features/f-1-authorization/a-1-sign-in/s-2-bll/b-2-redux/signInReducer\";\r\nimport {registerReducer} from \"../../neko-2-features/f-1-authorization/a-2-register/r-2-bll/b-2-redux/registerReducer\";\r\nimport {forgotReducer} from \"../../neko-2-features/f-1-authorization/a-3-forgot/f-2-bll/b-2-redux/forgotReducer\";\r\nimport {nekoReducer} from \"../../neko-2-features/f-4-social/s-1-neko/n-2-bll/b-2-redux/nekoReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    signIn: signInReducer,\r\n    register: registerReducer,\r\n    forgot: forgotReducer,\r\n\r\n    neko: nekoReducer,\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store\r\n\r\nexport type IAppStore = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev\r\n","import {signInInitialState} from \"./signInInitialState\";\r\nimport {ISignInActions, SIGN_IN} from \"./signInActions\";\r\n\r\nexport const signInReducer = (state = signInInitialState, action: ISignInActions) => {\r\n    switch (action.type) {\r\n        case SIGN_IN: { // blank\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n","import {registerInitialState} from \"./registerInitialState\";\r\nimport {IRegisterActions, REGISTER} from \"./registerActions\";\r\n\r\nexport const registerReducer = (state = registerInitialState, action: IRegisterActions) => {\r\n    switch (action.type) {\r\n        case REGISTER: { // blank\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n","import {forgotInitialState} from \"./forgotInitialState\";\r\nimport {IForgotActions, FORGOT} from \"./forgotActions\";\r\n\r\nexport const forgotReducer = (state = forgotInitialState, action: IForgotActions) => {\r\n    switch (action.type) {\r\n        case FORGOT: { // blank\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n","import {nekoInitialState} from \"./nekoInitialState\";\r\nimport {INekoActions, NEKO_SET_NAME} from \"./nekoActions\";\r\n\r\nexport const nekoReducer = (state = nekoInitialState, action: INekoActions) => {\r\n    switch (action.type) {\r\n\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {FORGOT_PATH, REGISTER_PATH} from \"../../../../neko-1-main/m-1-ui/Routes\";\r\n\r\ninterface ISignInProps {\r\n\r\n}\r\n\r\nconst SignIn: React.FC<ISignInProps> = (\r\n    {\r\n\r\n    }\r\n) => {\r\n\r\n    console.log('render SignIn');\r\n    return (\r\n        <div>\r\n            sign-in\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignIn;\r\n","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {NEKO_PATH} from \"../../../../neko-1-main/m-1-ui/Routes\";\r\nimport SignIn from \"./SignIn\";\r\nimport Disconnect from \"./Disconnect\";\r\n\r\nconst SignInContainer: React.FC = () => {\r\n\r\n    // redirect logic\r\n\r\n    return (\r\n        <SignIn\r\n\r\n        />\r\n    );\r\n};\r\n\r\nexport default SignInContainer;\r\n","import React from 'react';\r\nimport SignInContainer from \"./SignInContainer\";\r\n\r\nconst SignInPage: React.FC = () => {\r\n    console.log('render SignInPage');\r\n    return (\r\n        <SignInContainer/>\r\n    );\r\n};\r\n\r\nexport default SignInPage;\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {SIGN_IN_PATH} from \"../../../../neko-1-main/m-1-ui/Routes\";\r\n\r\ninterface IRegisterProps {\r\n\r\n}\r\n\r\nconst Register: React.FC<IRegisterProps> = (\r\n    {\r\n\r\n    }\r\n) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            register\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport {Redirect} from \"react-router\";\r\nimport {SIGN_IN_PATH} from \"../../../../neko-1-main/m-1-ui/Routes\";\r\nimport Register from './Register';\r\n\r\nconst RegisterContainer: React.FC = () => {\r\n\r\n    // redirect logic\r\n\r\n\r\n    return (\r\n        <Register\r\n\r\n        />\r\n    );\r\n};\r\n\r\nexport default RegisterContainer;\r\n","import React from 'react';\r\nimport RegisterContainer from \"./RegisterContainer\";\r\n\r\nconst RegisterPage: React.FC = () => {\r\n    console.log('render RegisterPage');\r\n    return (\r\n        <RegisterContainer/>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {SIGN_IN_PATH} from \"../../../../neko-1-main/m-1-ui/Routes\";\r\n\r\ninterface IForgotProps {\r\n\r\n}\r\n\r\nconst Forgot: React.FC<IForgotProps> = (\r\n    {\r\n\r\n    }\r\n) => {\r\n\r\n    console.log('render Forgot');\r\n    return (\r\n        <div>\r\n            forgot\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Forgot;\r\n","import React from 'react';\r\nimport {Redirect} from \"react-router\";\r\nimport {SIGN_IN_PATH} from \"../../../../neko-1-main/m-1-ui/Routes\";\r\nimport Forgot from './Forgot';\r\n\r\nconst ForgotContainer: React.FC = () => {\r\n\r\n\r\n    // redirect logic\r\n\r\n\r\n\r\n    return (\r\n        <Forgot\r\n\r\n        />\r\n    );\r\n};\r\n\r\nexport default ForgotContainer;\r\n","import React from 'react';\r\nimport ForgotContainer from './ForgotContainer';\r\n\r\nconst ForgotPage: React.FC = () => {\r\n    console.log('render ForgotPage');\r\n    return (\r\n        <ForgotContainer/>\r\n    );\r\n};\r\n\r\nexport default ForgotPage;\r\n","import React from 'react';\r\n\r\ninterface INekoProps {\r\n\r\n}\r\n\r\nconst Neko: React.FC<INekoProps> = (\r\n    {\r\n\r\n    }\r\n) => {\r\n\r\n    console.log('render Neko');\r\n    return (\r\n        <div>\r\n            Neko\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Neko;\r\n","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {SIGN_IN_PATH} from \"../../../../neko-1-main/m-1-ui/Routes\";\r\nimport Neko from \"./Neko\";\r\n\r\nconst NekoContainer: React.FC = () => {\r\n\r\n\r\n    // redirect logic\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Neko\r\n\r\n        />\r\n    );\r\n};\r\n\r\nexport default NekoContainer;\r\n","import React from 'react';\r\nimport NekoContainer from \"./NekoContainer\";\r\n\r\nconst NekoPage: React.FC = () => {\r\n    console.log('render NekoPage');\r\n    return (\r\n        <NekoContainer/>\r\n    );\r\n};\r\n\r\nexport default NekoPage;\r\n","import React from 'react';\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport SignInPage from '../../neko-2-features/f-1-authorization/a-1-sign-in/s-1-ui/SignInPage';\r\nimport RegisterPage\r\n    from '../../neko-2-features/f-1-authorization/a-2-register/r-1-ui/RegisterPage';\r\nimport ForgotPage from '../../neko-2-features/f-1-authorization/a-3-forgot/f-1-ui/ForgotPage';\r\nimport NekoPage from \"../../neko-2-features/f-4-social/s-1-neko/n-1-ui/NekoPage\";\r\n\r\n// all project paths\r\nexport const SIGN_IN_PATH = '/sign-in';\r\nexport const REGISTER_PATH = '/register';\r\nexport const FORGOT_PATH = '/forgot';\r\n\r\nexport const NEKO_PATH = '/neko'; // profile\r\n\r\nconst Routes: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Route exact path={'/'} render={() => <Redirect to={SIGN_IN_PATH}/>}/>\r\n\r\n            <Route path={SIGN_IN_PATH} render={() => <SignInPage/>}/>\r\n            <Route path={REGISTER_PATH} render={() => <RegisterPage/>}/>\r\n            <Route path={FORGOT_PATH} render={() => <ForgotPage/>}/>\r\n\r\n            <Route path={NEKO_PATH} render={() => <NekoPage/>}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","import React, {useState} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {\r\n    SIGN_IN_PATH, REGISTER_PATH, FORGOT_PATH,\r\n    NEKO_PATH\r\n} from './Routes';\r\n\r\nconst Header: React.FC = () => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    return (\r\n        <div style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-around',\r\n            flexWrap: \"wrap\",\r\n        }}>\r\n            <button onClick={() => setShow(!show)}>{show ? 'hide dev header' : 'show dev header'}</button>\r\n\r\n            {show && <NavLink to={SIGN_IN_PATH}>sign-in</NavLink>}\r\n            {show && <NavLink to={REGISTER_PATH}>register</NavLink>}\r\n            {show && <NavLink to={FORGOT_PATH}>forgot</NavLink>}\r\n\r\n            {show && <NavLink to={NEKO_PATH}>neko</NavLink>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\n\r\n// headers, routes, footers\r\nconst Main: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Header/>\r\n\r\n            <Routes/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport './App.css';\r\nimport store from \"./neko-1-main/m-2-bll/store\";\r\nimport Main from \"./neko-1-main/m-1-ui/Main\";\r\n\r\n// add context\r\nconst App: React.FC = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <HashRouter>\r\n                <Provider store={store}>\r\n                    <Main/>\r\n                </Provider>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}